import math
import numpy as np

set1 = ["G02",
        "G05",
        "G06", "G07",
        "G08",
        "G09",
        "G13",
        "G23", "G27",
        "G28", "G30"]
set2 = ["G02","G06","G12","G13","G15","G17","G19","G24","G25","G29","G32"]
set3 = ["G10", "G13", "G15", "G16", "G20", "G21", "G25", "G26", "G27", "G29", "G31"]
set4 = ["G01", "G03", "G08", "G11", "G14", "G17", "G18", "G22", "G23", "G31", "G32"]
set = set1 + set2 + set3 + set4
y_alici = [4208830.7150, 2334850.1024, 4171267.0925]

c11 = [24833572.746,22006938.883,25521548.613,20875657.148,24767366.920,21329534.125,24650865.997,24293787.311,24955140.621,22719337.867,20503335.870]
p21 = [24833567.012,22006935.228,25521548.179,20875652.645,24767366.519,21329532.679,24650861.741,24293781.788,24955138.766,22719332.701,20503333.926]

koord1 =np.array([
[21324.613932,	-15515.371491,	2982.570564,	-249.718929],
[15019.722616,	-7988.797021,	20322.237779,	0.302647],
[23945.035781,	-4660.331125,	-10504.958406,	162.819348],
[10554.770834,	11793.945778,	21645.770940,	-55.156770],
[-5533.370036,	24853.668757,	7203.784396,	-149.438247],
[8954.453201,	21162.659242,	13272.023023,	380.623615],
[12695.543065,	-18677.922092,	13828.514853,	-56.670101],
[996.973499,	26265.528951,	2029.230276,	-179.342026],
[-11992.598049,	16282.758274,	16944.395465,	-172.270788],
[22405.558236,	13120.115741,	-4729.476710,	767.000723],
[19786.452815,	4524.922698,	17258.625081,	-134.189812]])


c12 = [23123177.528, 22460793.836, 20757135.281, 25563871.306, 24260511.875, 23606970.487, 21664607.314, 20261240.595,
      23771970.989, 25536690.367,24591756.095]
p22 = [23123172.790, 22460793.738, 20757139.357, 25563871.021, 24260509.776, 23606966.978, 21664601.548, 20261239.568,
      23771969.962, 25536688.228,24591755.414]

koord2 = np.array([
    [14667.409870, 22167.121056, -1169.070842, -249.908174],
    [4506.444368,  23846.938435,  10790.948740,    162.582573],
    [17532.597734,  -1991.791699,  19580.957159,    228.121742],
    [18537.275434 , 12832.891056 ,-14189.872859 ,   -56.633532],
    [25723.866065  , 3499.082198,  -6779.156975,   -303.707829],
    [-5477.497451,  14281.723371,  22112.429239 ,    80.947866],
    [2058.622839  ,14847.957342,  21614.589026,   -299.803023],
    [19111.230112,   8293.614740,  16504.184606,    -68.193145],
    [18520.851896 ,-14926.535021 , 11340.009006 ,  -770.048186],
    [23974.391372,  -4625.447593, -10508.249800  ,  162.834479],
    [4117.007230, -15085.485562,  21519.570219  ,  -21.087791]])

c13 = [23260507.595, 25404373.085, 24309138.782, 21574916.122, 21234197.986, 20946075.730, 25598803.247, 20806390.236,
      23862798.574, 22508656.198, 25510184.570]
p23 = [23260508.389, 25404371.141, 24309137.425, 21574912.310, 21234194.824, 20946071.327, 25598805.199, 20806390.550,
      23862797.833, 22508653.322, 25510184.293]
koord3 = np.array([
    [23933.005055, 10653.682785, -4927.134635, -1.489137],
    [-12687.219408, 18454.832890, 14130.587360, -56.596360],
    [-3135.341771, 25303.669533, 6410.045923, -303.656028],
    [15582.628127, -5595.339298, 20680.172478, -52.546332],
    [22069.999028, 14088.276871, 4837.048737, 525.727336],
    [14949.402182, 8458.238108, 21018.792942, -162.851994],
    [14865.569199, 18816.779447, -11900.863906, -770.111247],
    [22303.873428, 992.537587, 14499.786512, 240.528010],
    [12005.006209, -16010.943105, 17194.774063, -172.722768],
    [4551.061112, 24055.224504, 10249.666956, 162.627349],
    [24629.461063, -5234.977000, -9128.458256, 27.332636]])


c14 = [20242409.795, 21337105.198, 24110870.179, 20522456.564, 21879220.337, 24413507.774, 20309310.027, 20940223.040,
      23236714.929, 22401231.486, 23162819.400]
p24 = [20242409.227, 21337104.289, 24110871.195, 20522451.404, 21879216.863, 24413504.368, 20309307.249, 20940216.621,
      23236710.040, 22401227.562, 23162818.269]
koord4 = np.array([
    [17734.832987, 6362.324408, 18659.390158, -55.647160],
    [18198.966069, -4947.272407, 18623.424103, 183.306038],
    [24955.644260, 5479.242121, -7612.538702, -149.536099],
    [23028.750566, 6143.837990, 10914.388347, -571.550886],
    [3656.291316, 15558.887256, 21565.447508, -73.517531],
    [5798.905820, -14251.888542, 22047.445371, 81.233159],
    [18665.325180, 14336.635141, 11933.032450, 66.460078],
    [16218.788887, 2931.001319, 21048.493423, -725.100787],
    [26763.957993, -252.708243, -521.068660, -179.227400],
    [4834.835267, 24103.964152, 9452.833703, 27.275273],
    [-4458.733232, 15071.523501, 21459.576879, -20.411587]])

koord = np.concatenate((koord1,koord2,koord3,koord4),axis=0)
c1 = c11 + c12 + c13 + c14
p2 = p21 + p22 +  p23 + p24

ısık = 299792458
cd = np.add(c1,ısık*(koord[:,3]/10**6)   )
pd = np.add(p2,ısık*(koord[:,3]/10**6)   )
koord_m = koord[:,:3] * 1000

def q():
    x = y_alici[0]
    y = y_alici[1]
    z = y_alici[2]
    xyz = np.array([[math.sqrt((k[0]-x)**2+(k[1]-y)**2+(k[2]-z)**2) for k in koord_m]])
    return xyz

q = q()


l = np.subtract(q,pd).T



def A():
    coord = np.array([[y_alici[0] for i in range(len(set))],[y_alici[1] for i in range(len(set))],[y_alici[2] for i in range(len(set))]]).T
    ara = np.subtract(coord,koord_m)
    sonuc = np.divide(ara,np.tile(q,(3,1)).T)
    c_ekle1 = np.append(sonuc, np.array([[ısık for i in range(len(set1))] + [0 for i in range(len(set)-len(set1))]]).T,axis=1)
    c_ekle2 = np.append(c_ekle1,
                        np.array([[0 for i in range(len(set1))] + [ısık for i in range(len(set2))] +[0 for i in range(len(set3)+len(set4))]]).T,
                        axis=1)
    c_ekle3 = np.append(c_ekle2,
                        np.array([[0 for i in range(len(set1)+len(set2))] + [ısık for i in range(len(set3))] + [0 for i in range(
                            len(set4))]]).T,
                        axis=1)
    c_ekle4 = np.append(c_ekle3,
                        np.array([[0 for i in range(len(set1)+len(set2)+len(set3))] + [ısık for i in range(len(set4))] ]).T,
                        axis=1)
    return c_ekle4

A = A()

N = np.matmul(A.T,A)

Q = np.linalg.inv(N)

n = np.matmul(A.T,l)

x = np.matmul(Q,n)

v = np.subtract(np.matmul(A,x),l)

vtv = np.matmul(v.T,v)[0][0]

s0 = math.sqrt(vtv/len(set))

qxx = Q[0][0]
qyy = Q[1][1]
qzz = Q[2][2]
sx = s0 + math.sqrt(qxx)
sy = s0 + math.sqrt(qyy)
sz = s0 + math.sqrt(qzz)

konumsapma = math.sqrt(sx**2 + sy**2 + sz**2 )

PDOP = math.sqrt(qxx + qyy + qzz)

def q2(xx):
    x = y_alici[0] + xx[0][0]
    y = y_alici[1] + xx[1][0]
    z = y_alici[2] + xx[2][0]
    xyz2 = np.array([[math.sqrt((k[0]-x)**2+(k[1]-y)**2+(k[2]-z)**2)+ ısık * xx[3][0] for k in koord_m]])

    return xyz2

dq = q2(x)

cson = np.add(cd,v.T)

pson = np.add(pd,v.T)

fark = np.subtract(dq,pson)